{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst baseUrl = `http://localhost:4000/api/v1`;\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\n\nexport const fetchAllBooks = createAsyncThunk(\"books/getBooks\", async () => {\n  const response = await fetch(`${baseUrl}/books/getBooks`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (response.ok) {\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n}); // /**\n//   * @asyncThunk Login function\n//   * @desc manage the user state when user log-in\n//   * @param  string $user - user state\n//   * @return returns user data in case of success and in case of error return error message.\n// */\n// export const registerUser = createAsyncThunk(\n//     \"users/register\",\n//     async (user) => {\n//         const response = await fetch(`${baseUrl}/accounts/register`, {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(user),\n//         });\n//       const json = await response.json();\n//       if(response.ok){\n//           return json;\n//       }\n//       else{\n//           throw new Error(json.message);\n//       }\n//     }\n//   );\n// /**\n//   * @asyncThunk Logout function\n//   * @desc log-out user and make the state empty if successfull\n//   * @return Redirect to home page insted and show alert message in case of success and error both\n// */\n// export const logoutUser = createAsyncThunk(\n//     \"users/logout\",\n//     async () => {\n//         localStorage.removeItem('Authentication-token');\n//         // TODO: Redirect to home page insted and show alert message in case of success and error both.\n//         return \"logged out\"\n//     }\n//   );\n\nexport const bookSlice = createSlice({\n  name: \"books\",\n  initialState: {\n    book: {\n      _id: \"\",\n      user: \"\",\n      title: \"\",\n      description: \"\",\n      authors: \"\",\n      rolpublishere: \"\",\n      thumbnail: \"\",\n      language: \"\",\n      ISBN: \"\",\n      tag: \"\",\n      publishedDate: \"\"\n    },\n    pending: false,\n    success_message: '',\n    error: false,\n    error_message: ''\n  },\n  reducers: {},\n  extraReducers: {\n    //? States for authentication.\n    [fetchAllBooks.pending]: state => {\n      console.log(\"start\");\n      state.pending = true;\n    },\n    [fetchAllBooks.fulfilled]: (state, action) => {\n      state.pending = false;\n      console.log(\"done\");\n      console.log(action.payload);\n      state.book = action.payload;\n      state.success_message = action.payload.message;\n    },\n    [fetchAllBooks.rejected]: (state, action) => {\n      state.pending = false;\n      state.error = true;\n      console.log(\"error\", action.error.message);\n      state.error_message = action.error.message;\n    } //? States for registration.\n    // [registerUser.pending]: (state) => {\n    //     state.pending = true;\n    // },\n    // [registerUser.fulfilled]: (state, action) => {\n    //     state.pending = false;\n    //     state.error = false;\n    //     state.success_message = action.payload.message;\n    // },\n    // [registerUser.rejected]: (state, action) => {\n    //     state.pending = false;\n    //     state.error = true;\n    //     state.error_message = action.error.message;\n    // },\n    // //? States for logout.\n    // [logoutUser.fulfilled]: (state, action) => {\n    //     state.user = null;\n    // },\n    // [logoutUser.rejected]: (state, action) => {\n    //     state.error = true;\n    //     state.error_message = action.error.message;\n    // },\n\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","baseUrl","fetchAllBooks","response","fetch","method","headers","json","ok","Error","message","bookSlice","name","initialState","book","_id","user","title","description","authors","rolpublishere","thumbnail","language","ISBN","tag","publishedDate","pending","success_message","error","error_message","reducers","extraReducers","state","console","log","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/akarshjain/Desktop/bookoe/src/redux/Slices/bookSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst baseUrl = `http://localhost:4000/api/v1`;\n\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\nexport const fetchAllBooks = createAsyncThunk(\n  \"books/getBooks\",\n  async () => {\n      const response = await fetch(`${baseUrl}/books/getBooks`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n    const json = await response.json();\n    if(response.ok){\n        return json;\n    }\n    else{\n        throw new Error(json.message);\n    }\n  }\n);\n\n\n// /**\n//   * @asyncThunk Login function\n//   * @desc manage the user state when user log-in\n//   * @param  string $user - user state\n//   * @return returns user data in case of success and in case of error return error message.\n// */\n// export const registerUser = createAsyncThunk(\n//     \"users/register\",\n//     async (user) => {\n//         const response = await fetch(`${baseUrl}/accounts/register`, {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(user),\n//         });\n  \n//       const json = await response.json();\n//       if(response.ok){\n//           return json;\n//       }\n//       else{\n//           throw new Error(json.message);\n//       }\n//     }\n//   );\n\n// /**\n//   * @asyncThunk Logout function\n//   * @desc log-out user and make the state empty if successfull\n//   * @return Redirect to home page insted and show alert message in case of success and error both\n// */\n// export const logoutUser = createAsyncThunk(\n//     \"users/logout\",\n//     async () => {\n//         localStorage.removeItem('Authentication-token');\n//         // TODO: Redirect to home page insted and show alert message in case of success and error both.\n//         return \"logged out\"\n//     }\n//   );\n\n  export const bookSlice = createSlice({\n    name: \"books\",\n    initialState: {\n      book: {\n        _id: \"\",\n        user: \"\",\n        title: \"\",\n        description: \"\",\n        authors: \"\",\n        rolpublishere: \"\",\n        thumbnail: \"\",\n        language: \"\",\n        ISBN: \"\",\n        tag: \"\",\n        publishedDate: \"\"\n      },\n      pending: false,\n      success_message: '',\n      error: false,\n      error_message: ''\n    },\n    reducers: {},\n    extraReducers: {\n        //? States for authentication.\n        [fetchAllBooks.pending]: (state) => {\n            console.log(\"start\");\n\n            state.pending = true;\n        },\n        [fetchAllBooks.fulfilled]: (state, action) => {\n            state.pending = false;\n            console.log(\"done\");\n            console.log(action.payload);\n            state.book = action.payload;\n            state.success_message = action.payload.message;\n        },\n        [fetchAllBooks.rejected]: (state, action) => {\n            state.pending = false;\n            state.error = true;\n            console.log(\"error\", action.error.message);\n\n            state.error_message = action.error.message;\n        },\n        //? States for registration.\n        // [registerUser.pending]: (state) => {\n        //     state.pending = true;\n        // },\n        // [registerUser.fulfilled]: (state, action) => {\n        //     state.pending = false;\n        //     state.error = false;\n        //     state.success_message = action.payload.message;\n        // },\n        // [registerUser.rejected]: (state, action) => {\n        //     state.pending = false;\n        //     state.error = true;\n        //     state.error_message = action.error.message;\n        // },\n        // //? States for logout.\n        // [logoutUser.fulfilled]: (state, action) => {\n        //     state.user = null;\n        // },\n        // [logoutUser.rejected]: (state, action) => {\n        //     state.error = true;\n        //     state.error_message = action.error.message;\n        // },\n    },\n  });\n\n\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,OAAO,GAAI,8BAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,gBAD2C,EAE3C,YAAY;EACR,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,iBAAZ,EAA8B;IACxDI,MAAM,EAAE,KADgD;IAExDC,OAAO,EAAE;MACP,gBAAgB;IADT;EAF+C,CAA9B,CAA5B;EAOF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;EACA,IAAGJ,QAAQ,CAACK,EAAZ,EAAe;IACX,OAAOD,IAAP;EACH,CAFD,MAGI;IACA,MAAM,IAAIE,KAAJ,CAAUF,IAAI,CAACG,OAAf,CAAN;EACH;AACF,CAjB0C,CAAtC,C,CAqBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,OAD6B;EAEnCC,YAAY,EAAE;IACZC,IAAI,EAAE;MACJC,GAAG,EAAE,EADD;MAEJC,IAAI,EAAE,EAFF;MAGJC,KAAK,EAAE,EAHH;MAIJC,WAAW,EAAE,EAJT;MAKJC,OAAO,EAAE,EALL;MAMJC,aAAa,EAAE,EANX;MAOJC,SAAS,EAAE,EAPP;MAQJC,QAAQ,EAAE,EARN;MASJC,IAAI,EAAE,EATF;MAUJC,GAAG,EAAE,EAVD;MAWJC,aAAa,EAAE;IAXX,CADM;IAcZC,OAAO,EAAE,KAdG;IAeZC,eAAe,EAAE,EAfL;IAgBZC,KAAK,EAAE,KAhBK;IAiBZC,aAAa,EAAE;EAjBH,CAFqB;EAqBnCC,QAAQ,EAAE,EArByB;EAsBnCC,aAAa,EAAE;IACX;IACA,CAAC7B,aAAa,CAACwB,OAAf,GAA0BM,KAAD,IAAW;MAChCC,OAAO,CAACC,GAAR,CAAY,OAAZ;MAEAF,KAAK,CAACN,OAAN,GAAgB,IAAhB;IACH,CANU;IAOX,CAACxB,aAAa,CAACiC,SAAf,GAA2B,CAACH,KAAD,EAAQI,MAAR,KAAmB;MAC1CJ,KAAK,CAACN,OAAN,GAAgB,KAAhB;MACAO,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAD,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACC,OAAnB;MACAL,KAAK,CAAClB,IAAN,GAAasB,MAAM,CAACC,OAApB;MACAL,KAAK,CAACL,eAAN,GAAwBS,MAAM,CAACC,OAAP,CAAe3B,OAAvC;IACH,CAbU;IAcX,CAACR,aAAa,CAACoC,QAAf,GAA0B,CAACN,KAAD,EAAQI,MAAR,KAAmB;MACzCJ,KAAK,CAACN,OAAN,GAAgB,KAAhB;MACAM,KAAK,CAACJ,KAAN,GAAc,IAAd;MACAK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACR,KAAP,CAAalB,OAAlC;MAEAsB,KAAK,CAACH,aAAN,GAAsBO,MAAM,CAACR,KAAP,CAAalB,OAAnC;IACH,CApBU,CAqBX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EA1CW;AAtBoB,CAAD,CAA7B;AAqET,eAAeC,SAAS,CAAC4B,OAAzB"},"metadata":{},"sourceType":"module"}