{"ast":null,"code":"// import {\n//   updateStart,\n//   updateSuccess,\n//   updateError,\n// } from \"../Slices/authenticationSlice\";\n// const baseUrl = `http://localhost:4000/api/v1`;\n// export const authenticateUser = async (user, dispatch) => {\n//   dispatch(updateStart());\n//   try {\n//     const response = await fetch(`${baseUrl}/accounts/login`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(user),\n//     }).then((response) => {\n//       if (!response.ok) {\n//         return response.text().then((text) => {\n//           throw new Error(text);\n//         });\n//       } else {\n//         return response.json();\n//       }\n//     });\n//     localStorage.setItem(\"Authentication-token\", response.token);\n//     dispatch(updateSuccess(response));\n//   } catch (error) {\n//     dispatch(updateError());\n//   }\n// };","map":{"version":3,"names":[],"sources":["/Users/akarshjain/Desktop/bookoe/src/redux/Api/authenticationCallbacks.js"],"sourcesContent":["// import {\n//   updateStart,\n//   updateSuccess,\n//   updateError,\n// } from \"../Slices/authenticationSlice\";\n\n// const baseUrl = `http://localhost:4000/api/v1`;\n\n// export const authenticateUser = async (user, dispatch) => {\n//   dispatch(updateStart());\n//   try {\n//     const response = await fetch(`${baseUrl}/accounts/login`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(user),\n//     }).then((response) => {\n//       if (!response.ok) {\n//         return response.text().then((text) => {\n//           throw new Error(text);\n//         });\n//       } else {\n//         return response.json();\n//       }\n//     });\n\n//     localStorage.setItem(\"Authentication-token\", response.token);\n\n//     dispatch(updateSuccess(response));\n//   } catch (error) {\n//     dispatch(updateError());\n//   }\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}