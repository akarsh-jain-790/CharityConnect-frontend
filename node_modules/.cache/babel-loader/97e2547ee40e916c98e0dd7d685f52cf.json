{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst baseUrl = `http://localhost:4000/api/v1`;\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\n\nexport const fetchAllBooks = createAsyncThunk(\"books/getBooks\", async page => {\n  const response = await fetch(`${baseUrl}/books/getBooks/?page=${page}&limit=6`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (response.ok) {\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n});\nexport const bookSlice = createSlice({\n  name: \"books\",\n  initialState: {\n    book: [],\n    totalPages: 0,\n    currentPage: 0,\n    pendinng: false,\n    success_message: '',\n    error: false,\n    error_message: ''\n  },\n  reducers: {},\n  extraReducers: {\n    //? States for authentication.\n    [fetchAllBooks.pending]: state => {\n      state.pending = true;\n    },\n    [fetchAllBooks.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.book = action.payload.books;\n      state.totalPages = action.payload.totalPages;\n      state.currentPage = Number(action.payload.curretPage);\n      state.success_message = action.payload.message;\n    },\n    [fetchAllBooks.rejected]: (state, action) => {\n      state.pending = false;\n      state.error = true;\n      console.log(\"error\", action.error.message);\n      state.error_message = action.error.message;\n    }\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","baseUrl","fetchAllBooks","page","response","fetch","method","headers","json","ok","Error","message","bookSlice","name","initialState","book","totalPages","currentPage","pendinng","success_message","error","error_message","reducers","extraReducers","pending","state","fulfilled","action","payload","books","Number","curretPage","rejected","console","log","reducer"],"sources":["/Users/akarshjain/Desktop/bookoe/src/redux/Slices/bookSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst baseUrl = `http://localhost:4000/api/v1`;\n\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\nexport const fetchAllBooks = createAsyncThunk(\n  \"books/getBooks\",\n  async (page) => {\n      const response = await fetch(`${baseUrl}/books/getBooks/?page=${page}&limit=6`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n    const json = await response.json();\n    if(response.ok){\n        return json;\n    }\n    else{\n        throw new Error(json.message);\n    }\n  }\n);\n\nexport const bookSlice = createSlice({\n  name: \"books\",\n  initialState: {\n    book: [],\n    totalPages: 0,\n    currentPage: 0,\n    pendinng: false,\n    success_message: '',\n    error: false,\n    error_message: ''\n  },\n  reducers: {},\n  extraReducers: {\n      //? States for authentication.\n      [fetchAllBooks.pending]: (state) => {\n          state.pending = true;\n      },\n      [fetchAllBooks.fulfilled]: (state, action) => {\n          state.pending = false;\n          state.book = action.payload.books;\n          state.totalPages = action.payload.totalPages;\n          state.currentPage = Number(action.payload.curretPage);\n          state.success_message = action.payload.message;\n      },\n      [fetchAllBooks.rejected]: (state, action) => {\n          state.pending = false;\n          state.error = true;\n          console.log(\"error\", action.error.message);\n\n          state.error_message = action.error.message;\n      },\n  },\n});\n\n\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,OAAO,GAAI,8BAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,gBAD2C,EAE3C,MAAOI,IAAP,IAAgB;EACZ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,yBAAwBE,IAAK,UAAzC,EAAoD;IAC9EG,MAAM,EAAE,KADsE;IAE9EC,OAAO,EAAE;MACP,gBAAgB;IADT;EAFqE,CAApD,CAA5B;EAOF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;EACA,IAAGJ,QAAQ,CAACK,EAAZ,EAAe;IACX,OAAOD,IAAP;EACH,CAFD,MAGI;IACA,MAAM,IAAIE,KAAJ,CAAUF,IAAI,CAACG,OAAf,CAAN;EACH;AACF,CAjB0C,CAAtC;AAoBP,OAAO,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,OAD6B;EAEnCC,YAAY,EAAE;IACZC,IAAI,EAAE,EADM;IAEZC,UAAU,EAAE,CAFA;IAGZC,WAAW,EAAE,CAHD;IAIZC,QAAQ,EAAE,KAJE;IAKZC,eAAe,EAAE,EALL;IAMZC,KAAK,EAAE,KANK;IAOZC,aAAa,EAAE;EAPH,CAFqB;EAWnCC,QAAQ,EAAE,EAXyB;EAYnCC,aAAa,EAAE;IACX;IACA,CAACrB,aAAa,CAACsB,OAAf,GAA0BC,KAAD,IAAW;MAChCA,KAAK,CAACD,OAAN,GAAgB,IAAhB;IACH,CAJU;IAKX,CAACtB,aAAa,CAACwB,SAAf,GAA2B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC1CF,KAAK,CAACD,OAAN,GAAgB,KAAhB;MACAC,KAAK,CAACV,IAAN,GAAaY,MAAM,CAACC,OAAP,CAAeC,KAA5B;MACAJ,KAAK,CAACT,UAAN,GAAmBW,MAAM,CAACC,OAAP,CAAeZ,UAAlC;MACAS,KAAK,CAACR,WAAN,GAAoBa,MAAM,CAACH,MAAM,CAACC,OAAP,CAAeG,UAAhB,CAA1B;MACAN,KAAK,CAACN,eAAN,GAAwBQ,MAAM,CAACC,OAAP,CAAejB,OAAvC;IACH,CAXU;IAYX,CAACT,aAAa,CAAC8B,QAAf,GAA0B,CAACP,KAAD,EAAQE,MAAR,KAAmB;MACzCF,KAAK,CAACD,OAAN,GAAgB,KAAhB;MACAC,KAAK,CAACL,KAAN,GAAc,IAAd;MACAa,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,MAAM,CAACP,KAAP,CAAaT,OAAlC;MAEAc,KAAK,CAACJ,aAAN,GAAsBM,MAAM,CAACP,KAAP,CAAaT,OAAnC;IACH;EAlBU;AAZoB,CAAD,CAA7B;AAmCP,eAAeC,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}