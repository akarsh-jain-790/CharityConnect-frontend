{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authenticationReducer from './Slices/authenticationSlice';\nimport booksReducer from './Slices/authenticationSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n  blacklist: ['error_message', 'success_message']\n};\nconst authenticationPersistedReducer = persistReducer(persistConfig, authenticationReducer);\nconst booksPersistedReducer = persistReducer(persistConfig, booksReducer);\nexport const store = configureStore({\n  reducer: {\n    authentication: authenticationPersistedReducer,\n    authentication: booksPersistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","authenticationReducer","booksReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","blacklist","authenticationPersistedReducer","booksPersistedReducer","store","reducer","authentication","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/akarshjain/Desktop/bookoe/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authenticationReducer from './Slices/authenticationSlice';\nimport booksReducer from './Slices/authenticationSlice';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n    blacklist: ['error_message', 'success_message']\n  }\n\nconst authenticationPersistedReducer = persistReducer(persistConfig, authenticationReducer);\nconst booksPersistedReducer = persistReducer(persistConfig, booksReducer);\n\nexport const store = configureStore({\n    reducer: {\n        authentication: authenticationPersistedReducer,\n        authentication: booksPersistedReducer\n    },\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\n\nexport let persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBC,OAAO,EAAE,CAFS;EAGlBH,OAHkB;EAIlBI,SAAS,EAAE,CAAC,eAAD,EAAkB,iBAAlB;AAJO,CAAtB;AAOA,MAAMC,8BAA8B,GAAGZ,cAAc,CAACQ,aAAD,EAAgBX,qBAAhB,CAArD;AACA,MAAMgB,qBAAqB,GAAGb,cAAc,CAACQ,aAAD,EAAgBV,YAAhB,CAA5C;AAEA,OAAO,MAAMgB,KAAK,GAAGlB,cAAc,CAAC;EAChCmB,OAAO,EAAE;IACLC,cAAc,EAAEJ,8BADX;IAELI,cAAc,EAAEH;EAFX,CADuB;EAKhCI,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AANY,CAAD,CAA5B;AAcP,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACe,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}