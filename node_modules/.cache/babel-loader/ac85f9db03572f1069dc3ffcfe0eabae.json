{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst baseUrl = `http://localhost:4000/api/v1`;\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\n\nexport const authenticateUser = createAsyncThunk(\"users/authenticate\", async user => {\n  const response = await fetch(`${baseUrl}/accounts/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  const json = await response.json();\n\n  if (response.ok) {\n    localStorage.setItem(\"Authentication-token\", json.token);\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n});\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\n\nexport const registerUser = createAsyncThunk(\"users/register\", async user => {\n  const response = await fetch(`${baseUrl}/accounts/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  const json = await response.json();\n\n  if (response.ok) {\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n});\n/**\n  * @asyncThunk Logout function\n  * @desc log-out user and make the state empty if successfull\n  * @return Redirect to home page insted and show alert message in case of success and error both\n*/\n\nexport const logoutUser = createAsyncThunk(\"users/logout\", async () => {\n  localStorage.removeItem('Authentication-token'); // TODO: Redirect to home page insted and show alert message in case of success and error both.\n\n  return \"logged out\";\n});\nexport const userSlice = createSlice({\n  name: \"authentication\",\n  initialState: {\n    user: {\n      _id: \"\",\n      first_name: \"\",\n      username: \"\",\n      last_name: \"\",\n      email: \"\",\n      role: \"\"\n    },\n    token: \"\",\n    pending: false,\n    error: false,\n    error_message: ''\n  },\n  reducers: {},\n  extraReducers: {\n    //? States for authentication.\n    [authenticateUser.pending]: state => {\n      state.pending = true;\n    },\n    [authenticateUser.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.user = action.payload.userData;\n      state.token = action.payload.token;\n    },\n    [authenticateUser.rejected]: (state, action) => {\n      state.pending = false;\n      state.error = true;\n      state.error_message = action.error.message;\n    },\n    //? States for registration.\n    [logoutUser.fulfilled]: (state, action) => {\n      state.user = null;\n    },\n    [logoutUser.rejected]: (state, action) => {\n      state.error = true;\n      state.error_message = action.error.message;\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","baseUrl","authenticateUser","user","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","token","Error","message","registerUser","logoutUser","removeItem","userSlice","name","initialState","_id","first_name","username","last_name","email","role","pending","error","error_message","reducers","extraReducers","state","fulfilled","action","payload","userData","rejected","reducer"],"sources":["/Users/akarshjain/Desktop/bookoe/src/redux/Slices/authenticationSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst baseUrl = `http://localhost:4000/api/v1`;\n\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\nexport const authenticateUser = createAsyncThunk(\n  \"users/authenticate\",\n  async (user) => {\n      const response = await fetch(`${baseUrl}/accounts/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      });\n\n    const json = await response.json(); \n    if(response.ok){\n        localStorage.setItem(\"Authentication-token\", json.token);\n        return json;\n    }\n    else{\n        throw new Error(json.message);\n    }\n  }\n);\n\n\n/**\n  * @asyncThunk Login function\n  * @desc manage the user state when user log-in\n  * @param  string $user - user state\n  * @return returns user data in case of success and in case of error return error message.\n*/\nexport const registerUser = createAsyncThunk(\n    \"users/register\",\n    async (user) => {\n        const response = await fetch(`${baseUrl}/accounts/register`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(user),\n        });\n  \n      const json = await response.json(); \n      if(response.ok){\n          return json;\n      }\n      else{\n          throw new Error(json.message);\n      }\n    }\n  );\n\n/**\n  * @asyncThunk Logout function\n  * @desc log-out user and make the state empty if successfull\n  * @return Redirect to home page insted and show alert message in case of success and error both\n*/\nexport const logoutUser = createAsyncThunk(\n    \"users/logout\",\n    async () => {\n        localStorage.removeItem('Authentication-token');\n        // TODO: Redirect to home page insted and show alert message in case of success and error both.\n        return \"logged out\"\n    }\n  );\n\n  export const userSlice = createSlice({\n    name: \"authentication\",\n    initialState: {\n      user: {\n        _id: \"\",\n        first_name: \"\",\n        username: \"\",\n        last_name: \"\",\n        email: \"\",\n        role: \"\",\n      },\n      token: \"\",\n      pending: false,\n      error: false,\n      error_message: ''\n    },\n    reducers: {},\n    extraReducers: {\n        //? States for authentication.\n      [authenticateUser.pending]: (state) => {\n        state.pending = true;\n      },\n      [authenticateUser.fulfilled]: (state, action) => {\n        state.pending = false;\n        state.user = action.payload.userData;\n        state.token = action.payload.token;\n      },\n      [authenticateUser.rejected]: (state, action) => {\n        state.pending = false;\n        state.error = true;\n        state.error_message = action.error.message;\n      },\n        //? States for registration.\n      [logoutUser.fulfilled]: (state, action) => {\n          state.user = null;\n      },\n      [logoutUser.rejected]: (state, action) => {\n          state.error = true;\n          state.error_message = action.error.message;\n      },\n    },\n  });\n\n\nexport default userSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}